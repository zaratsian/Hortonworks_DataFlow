
# ansible-playbook -i ~/Dropbox/code/scripts/hosts ~/Dropbox/code/scripts/ansible_hdf_3_1.yaml
# ansible-playbook -i ~/Dropbox/code/scripts/hosts ~/Dropbox/code/scripts/ansible_hdf_3_1.yaml --tags prereqs,ambari,test

#################################################################################################################
# ./hosts file contains:
#
# [hdf_ambari_node]
# dzaratsian0.field.hortonworks.com
#
# [hdf_non_ambari_nodes]
# dzaratsian1.field.hortonworks.com
#
#################################################################################################################


#################################################################################################################
# 
#   Setup Pre-requests across all nodes of the cluster
#
#################################################################################################################
- hosts: hdf_ambari_node,hdf_non_ambari_nodes
  
  remote_user: centos
  vars:
    ambari_host_var:  "{{ groups['hdf_ambari_node'] }}"
  
  tasks:
    
    ########################################################  
    #
    #   HDF Pre-requisites
    #
    ########################################################
    - name: Install Python Pip
      tags: prereqs
      become: yes
      become_user: root
      become_method: sudo
      shell: "{{ item }}"
      with_items:
        - curl "https://bootstrap.pypa.io/get-pip.py" -o /tmp/get-pip.py
        - python /tmp/get-pip.py
    
    - name: Setup Password-less SSH
      tags: prereqs
      shell: "{{item}}"
      with_items:
        - ssh-keygen -f ~/.ssh/id_rsa -t rsa -N ''
        - cat /home/centos/.ssh/id_rsa.pub >> /home/centos/.ssh/authorized_keys
        - chmod 700 ~/.ssh
        - chmod 600 ~/.ssh/authorized_keys
     
    - name: Install Dependencies
      become: yes
      become_user: root
      become_method: sudo
      tags: prereqs
      shell: "{{item}}"
      with_items:
        # Install dependencies
        - yum install -y wget
        # Update /etc/hosts file
        - echo $(ifconfig eth0 | grep 'inet ' | awk '{print $2}') $HOSTNAME $(hostname -f) >> /etc/hosts
        # Update network file with hostname
        - echo HOSTNAME=$(hostname -f) >> /etc/sysconfig/network
        # Enable NTP 
        - yum install -y ntp
        - systemctl is-enabled ntpd
        - systemctl enable ntpd
        - systemctl start ntpd
        # Check status of Firewall (If running, then it should be temporarily disabled)
        #- systemctl status firewalld
        - systemctl disable firewalld
    
    - name: Capture public key on ambari node
      tags: prereqs
      shell: cat "/home/centos/.ssh/id_rsa.pub"
      register: ambari_pub_key_var
      when: "'hdf_ambari_node' in group_names"
    
    #- debug: msg="{{ ambari_pub_key_var.stdout }}"
    #  tags: prereqs
    #  when: "'hdf_ambari_node' in group_names"
    
    - name: Copy ambari pub key to all non-ambari nodes
      tags: prereqs
      when: "'hdf_ambari_node' not in group_names"
      shell: "echo '{{ item }}' >> /home/centos/.ssh/authorized_keys"
      with_items:
        - "{{ hostvars[ambari_host_var[0]]['ambari_pub_key_var']['stdout'] }}"



#################################################################################################################
# 
#   Ambari Node - Configuration
#
#################################################################################################################
- hosts: hdf_ambari_node
  
  remote_user: centos
  vars:
    ambari_host_var:  "{{ groups['hdf_ambari_node'] }}"
    mysql_root_password: "horton.Mysql123"
  
  tasks:
    
    ########################################################  
    #
    #   MySQL Installation
    #
    ########################################################    
    - name: MySQL - Download and Install
      become: yes
      become_user: root
      become_method: sudo
      tags: ambari
      shell: "{{item}}"
      with_items:
        - yum localinstall -y https://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm
        - yum install -y epel-release mysql-connector-java* mysql-community-server
        - ambari-server setup --jdbc-db=mysql --jdbc-driver=/usr/share/java/mysql-connector-java.jar
        - systemctl start mysqld.service
        - systemctl status mysqld.service
    
    - name: MySQL - Capture MySQL Temporary Password
      become: yes
      become_user: root
      become_method: sudo
      tags: test
      shell: "grep 'A temporary password is generated for root@localhost: ' /var/log/mysqld.log | tail -1 | rev | cut -d' ' -f1 | rev"
      register: mysql_temporary_password
    
    - debug: msg="{{ mysql_temporary_password['stdout'] }}"
      tags: test
    
    - name: MySQL - Secure Install (update password, clear DBs, etc with mysql_secure_installation)
      tags: ansible
      become: yes
      become_user: root
      become_method: sudo
      echo: yes
      expect:
        command: /usr/bin/mysql_secure_installation
        responses:
          Enter password for user root:
            - "{{ mysql_temporary_password.stdout }}"
          New password:
            - "{{ mysql_root_password }}"
          Re-enter new password:
            - "{{ mysql_root_password }}"
    
    - name: Install MySQL-python, this is required for the task remove anonymous user
      tags: ambari
      become: yes
      become_user: root
      become_method: sudo
      yum: name=MySQL-python state=present
    
    
    ########################################################  
    #
    #   Ambari Installation
    #
    ########################################################  
    - name: Ambari Server - Install and Start
      become: yes
      become_user: root
      become_method: sudo
      tags: ambari
      shell: "{{item}}"
      with_items:
        # Download Ambari Repo (saved to /etc/yum.repos.d/ambari.repo)
        - wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.1.0/ambari.repo -O /etc/yum.repos.d/ambari.repo
        #- yum repolist
        # Install Ambari Server
        - yum install -y ambari-server
        # Setup Ambari Server
        - echo -e "y\nn\n1\ny\ny\nn\n" | sudo ambari-server setup
        # Starting Ambari Server
        - ambari-server start
        #- ambari-server start --skip-database-check
        - ambari-server status




##########################################################################################
#
# NOTES:
#
#   http://docs.ansible.com/ansible/latest/index.html
#
#   "command" is more secure than "shell". However, "shell" uses env variables. Some 
#   stream operations will also note work with "command", such as >, &, etc.
#
#
##########################################################################################

#ZEND
